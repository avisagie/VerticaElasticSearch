
version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations { sshAntTask }

dependencies {

	 compile group: 'org.elasticsearch.client', name: 'transport', version: '5.1.1'
	 compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
     compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
	 compile files('libs/VerticaSDK.jar')
	 sshAntTask 'org.apache.ant:ant-jsch:1.9.2'

ant.taskdef(
        name: 'scp',
        classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
        classpath: configurations.sshAntTask.asPath)

//Create jar file with dependencies
task fatJar(type: Jar) {
	manifest {
		attributes 'Implementation-Title': 'vertica with elasticsearch UDSF',
		'Implementation-Version': version
		
	}
	baseName = project.name
	from { configurations.runtime.collect { it.isDirectory() ? it: zipTree(it)}}
	with jar
}


task scpJar() {

	doLast {
			 // Create a new file for each execution to make 
    // sure that execution doesn't fails in case 
    // idententy of host has been changed.
    def knownHosts = File.createTempFile("knownhosts", "txt")
    def user = 'root'
    def host = '127.0.0.1'
    def privateKey = 'vagrant'
    
    
    
    
        try {
        
        // Example to copy files to a remote host.
        ant.scp(
                file: file("build/libs/vertica-elasticsearch-udx-1.0.jar"),
                todir: "${user}@${host}:/home/dbadmin",
                password: privateKey,
                trust: true,
                port: 2222,
                verbose: true,
                knownhosts: knownHosts
        )

    } finally {
        knownHosts.delete()
    }
 }

	
}





     
     
     
}


